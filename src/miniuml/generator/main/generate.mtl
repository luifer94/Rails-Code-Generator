[comment encoding = UTF-8 /]
[**
 * The documentation of the module generate.
 */]
[module generate('http://www.example.org/miniuml')]


[**
 * The documentation of the template generateElement.
 * @param aModel
 */]
[template public generateElement(model : Model){CONTADOR : Integer = 100;}]

[comment @main/]
[for (c : Class | model.elements->filter(Class))]

[comment creacion de controladores/]	
[file ('app/controllers/'+ c.name.toLowerCase() + 's_controller.rb', false, 'UTF-8')]
class [c.name+'sController'/] < ApplicationController
  before_action :set_[c.name.toLowerCase()/], only: ['[:show, :edit, :update, :destroy]'/]
  
  # GET /[c.name.toLowerCase()+'s'/]
  # GET /[c.name.toLowerCase()+'s'/].json
  def index
    @[c.name.toLowerCase()+'s'/] = [c.name/].all
  end

  # GET /[c.name.toLowerCase()+'s'/]/1
  # GET /[c.name.toLowerCase()+'s'/]/1.json
  def show
  end

  # GET /[c.name.toLowerCase()+'s'/]/new
  def new
  @[c.name.toLowerCase()/] = [c.name/].new
[for (a : Attribute | c.attributes)]
[if((a.type.name = 'belongs_to'))]
  @[a.name.toLowerCase()/]=[a.name/].all
[/if]
[/for]
  end

  # GET /[c.name.toLowerCase()+'s'/]/1/edit
  def edit
  end

  # POST /[c.name.toLowerCase()+'s'/]
  # POST /[c.name.toLowerCase()+'s'/].json
  def create
    @[c.name.toLowerCase()/] = [c.name/].new([c.name.toLowerCase()/]_params)
[for (a : Attribute | c.attributes)]
[if((a.type.name = 'belongs_to'))]
  	@[a.name.toLowerCase()/]=[a.name/].all
[/if]
[/for]
    respond_to do |format|
      if @[c.name.toLowerCase()/].save
        format.html { redirect_to @[c.name.toLowerCase()/], mensaje: 'La/el [c.name/] fue creada satisfactoriamente.' }
        format.json { render :show, status: :created, location: @[c.name.toLowerCase()/] }
      else
        format.html { render :new }
        format.json { render json: @[c.name.toLowerCase()/].errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /[c.name.toLowerCase()+'s'/]/1
  # PATCH/PUT /[c.name.toLowerCase()+'s'/]/1.json
  def update
    respond_to do |format|
      if @[c.name.toLowerCase()/].update([c.name.toLowerCase()/]_params)
        format.html { redirect_to @[c.name.toLowerCase()/], notice: 'La/el [c.name/] fue actualizada satisfactoriamente.' }
        format.json { render :show, status: :ok, location: @[c.name.toLowerCase()/] }
      else
        format.html { render :edit }
        format.json { render json: @[c.name.toLowerCase()/].errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /[c.name.toLowerCase()+'s'/]/1
  # DELETE /[c.name.toLowerCase()+'s'/]/1.json
  def destroy
    @[c.name.toLowerCase()/].destroy
    respond_to do |format|
      format.html { redirect_to [c.name.toLowerCase()+'s'/]_url, notice: 'La/el [c.name/] fue destruido satisfactoriamente.' }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_[c.name.toLowerCase()/]
      @[c.name.toLowerCase()/] = [c.name/].find(params['[:id]'/])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def [c.name.toLowerCase()/]_params
	  [if (not c.parent.oclIsUndefined())] params.fetch(:[c.name.toLowerCase()/], {}).permit([for (a : Attribute | c.attributes)][if (c.attributes->last() = a)][':'+a.name+',' /][/if][if (c.attributes->last() <> a)][':'+a.name+','/][/if][for (a : Attribute | c.parent.attributes)][if(a.type.eClass().name.equalsIgnoreCase('Class'))][if (c.parent.attributes->last() = a)][':'+a.name+'_id)' /][/if][if (c.parent.attributes->last() <> a)][':'+a.name+'_id,'/][/if][/if][if(not a.type.eClass().name.equalsIgnoreCase('Class'))][if (c.parent.attributes->last() = a)][':'+a.name+')' /][/if][if (c.parent.attributes->last() <> a)][':'+a.name+','/][/if][/if][/for][/for][/if]
      [if (c.parent.oclIsUndefined())] ['params.require(:'+c.name.toLowerCase()+').permit( '/][for (a : Attribute | c.attributes)][if((a.type.name <> 'has_manyT')and (a.type.name <> 'has_many') and (a.type.name <> 'belongs_to'))][':'+a.name/][if ((not (c.attributes->last() = a)) and ((a.type.name <> 'has_manyT')and (a.type.name <> 'has_many') and (a.type.name <> 'belongs_to')))], [/if][/if][/for][for (a : Attribute | c.attributes)][if((a.type.name = 'belongs_to'))][':'+a.name.toLowerCase()+'_id'/][if ((not (c.attributes->last() = a)) and (a.type.name = 'belongs_to'))], [/if][/if][/for][for (a : Attribute | c.attributes)][if ((a.type.name = 'has_many'))][a.name.toLowerCase()+'_ids:[]'/][elseif((a.type.name = 'has_manyT'))][a.name.substitute((a.name.substring(a.name.index(':'))) ,'').toLowerCase()+'_ids:[]'/][/if][if ((not (c.attributes->last() = a)) and ((a.type.name = 'has_manyT') or (a.type.name = 'has_many')))], [/if][/for][/if])
    end
end
[/file]

[comment creacion de helpers/]
[file ('app/helpers/'+ c.name.toLowerCase() + 's_helper.rb', false, 'UTF-8')]
module [c.name+'sHelper'/]
end
[/file]

[comment creacion de modelos/]
[file ('app/models/'+ c.name.toLowerCase() + '.rb', false, 'UTF-8')]
class [c.name/] [if (not c.parent.oclIsUndefined())]['< '+c.parent.name/][/if][if (c.parent.oclIsUndefined())]['< ActiveRecord::Base'/][/if]
[for (a : Attribute | c.attributes)]
[if(a.type.name = 'belongs_to')]
	belongs_to :[a.name.toLowerCase()/]
[elseif(a.type.name = 'has_one' )]
	has_one :[a.name.toLowerCase()/]
[/if]  
[/for]
[for (a : Attribute | c.attributes)]
[if(a.type.name = 'has_many' )]
	has_many :[a.name.toLowerCase()/]s
[/if]  
[/for] 
[for (a : Attribute | c.attributes)]
[if(a.type.name = 'has_oneT' )]
	has_one :[a.name.substitute((a.name.substring(a.name.index(':'))) ,'').toLowerCase()/] , through: :[(a.name.substring(a.name.index(':')+1)).toLowerCase()/]
[elseif(a.type.name = 'has_manyT' )]
	has_many :[(a.name.substring(a.name.index(':')+1)).toLowerCase()/]s
	has_many :[a.name.substitute((a.name.substring(a.name.index(':'))) ,'').toLowerCase()/]s , through: :[(a.name.substring(a.name.index(':')+1)).toLowerCase()/]s
[/if]  
[/for]
def to_s
   #put your own code here
end
end 
[/file]

[comment creacion de _form.html.erb /]
[file ('app/views/'+c.name.toLowerCase() +'s/_form.html.erb', false, 'UTF-8')]
<%= form_for(['@'+c.name.toLowerCase()/],builder: BootstrapFormBuilder) do |f| %>
  <% if ['@'+c.name.toLowerCase()/].errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(['@'+c.name.toLowerCase()/].errors.count, "error") %> prohibited this empresa from being saved:</h2>

      <ul>
      <% ['@'+c.name.toLowerCase()/].errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>
     
[if (c.parent.oclIsUndefined())] 
	[for (a : Attribute | c.attributes)] 
  [generarAtributo(a)/]
	[/for] 
[/if]
[if (not c.parent.oclIsUndefined())] 
	[for (a : Attribute | c.parent.attributes)]
  [generarAtributo(a)/]
	[/for]
	[for (a : Attribute | c.attributes)]
  [generarAtributo(a)/]
	[/for]
[/if]
  <div class="actions">
    <%= f.submit %>
  </div>
<% end %>
[/file]

[comment creacion de edit.erb/]
[file ('app/views/'+c.name.toLowerCase() +'s/edit.html.erb', false, 'UTF-8')]
	<div class="col-md-11 no-float center-block">
<div class='col-md-10 col-xs-12 col-sm-11 no-float center-block'>
  	<div class='card large-padding'>
<h1>Editing </h1>
<%= render 'form' %>
<%= link_to 'Show', ['@'+c.name.toLowerCase()/] %> |
<%= link_to 'Back', [c.name.toLowerCase()+'s'/]_path %>
  </div>
</div>
</div>
[/file]

[comment creacion de index.erb/]
[file ('app/views/'+c.name.toLowerCase() +'s/index.html.erb', false, 'UTF-8')]
<p id="notice"><%= notice %></p>
<div class='card large-padding'>
<h1>Listing [c.name+'s'/]</h1>

<table class='table table-striped table-hover'>
  <thead>
    <tr>
[if (c.parent.oclIsUndefined())] 
	[for (a : Attribute | c.attributes)] 
		[if((a.type.name = 'integer') or (a.type.name = 'string') or (a.type.name = 'date') or (a.type.name = 'boolean') or (a.type.name = 'float') or (a.type.name = 'datetime') or  (a.type.name = 'time'))]
		<th>[a.name/]</th>
		[/if]
	[/for] 
[/if]
[if (not c.parent.oclIsUndefined())] 
	[for (a : Attribute | c.parent.attributes)]
		[if((a.type.name = 'integer') or (a.type.name = 'string') or (a.type.name = 'date') or (a.type.name = 'boolean') or (a.type.name = 'float') or (a.type.name = 'datetime') or  (a.type.name = 'time'))]
		<th>[a.name/]</th>
		[/if]
	[/for]
	[for (a : Attribute | c.attributes)]
		[if((a.type.name = 'integer') or (a.type.name = 'string') or (a.type.name = 'date') or (a.type.name = 'boolean') or (a.type.name = 'float') or (a.type.name = 'datetime') or  (a.type.name = 'time'))]
		<th>[a.name/]</th>
		[/if]
	[/for]
[/if]
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
     <% ['@'+c.name.toLowerCase()+'s'/].each do |[c.name.toLowerCase()/]| %>
      <tr>
[if (c.parent.oclIsUndefined())] 
	[for (a : Attribute | c.attributes)] 
  		[if((a.type.name = 'integer') or (a.type.name = 'string') or (a.type.name = 'date') or (a.type.name = 'boolean') or (a.type.name = 'float') or (a.type.name = 'datetime') or  (a.type.name = 'time'))]
  		<td><%= [c.name.toLowerCase()+'.'+a.name/] %></td>
		[/if]
	[/for] 
[/if]
[if (not c.parent.oclIsUndefined())] 
	[for (a : Attribute | c.parent.attributes)]
  		[if((a.type.name = 'integer') or (a.type.name = 'string') or (a.type.name = 'date') or (a.type.name = 'boolean') or (a.type.name = 'float') or (a.type.name = 'datetime') or  (a.type.name = 'time'))]
  		<td><%= [c.name.toLowerCase()+'.'+a.name/] %></td>
		[/if]
	[/for]
	[for (a : Attribute | c.attributes)]
  		[if((a.type.name = 'integer') or (a.type.name = 'string') or (a.type.name = 'date') or (a.type.name = 'boolean') or (a.type.name = 'float') or (a.type.name = 'datetime') or  (a.type.name = 'time'))]
  		<td><%= [c.name.toLowerCase()+'.'+a.name/] %></td>
		[/if]
	[/for]
[/if]
        <td><%= link_to 'Show', [c.name.toLowerCase()/] %></td>
        <td><%= link_to 'Edit', edit_[c.name.toLowerCase()/]_path([c.name.toLowerCase()/])  %></td>
        <td><%= link_to 'Destroy', [c.name.toLowerCase()/], method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<%= link_to 'New [c.name/]', new_[c.name.toLowerCase()/]_path %>
</div>
[/file]

[comment creacion de new.html.erb/]
[file ('app/views/'+c.name.toLowerCase() +'s/new.html.erb', false, 'UTF-8')]
<div class='col-md-10 col-xs-12 col-sm-11 no-float center-block'>
  	<div class='card large-padding'>
<h1>New [c.name/]</h1>
<%= render 'form' %>
<%= link_to 'Back', [c.name.toLowerCase()+'s'/]_path %>
  </div>
</div>
[/file]

[comment creacion de show.html.erb/]
[file ('app/views/'+c.name.toLowerCase() +'s/show.html.erb', false, 'UTF-8')]
<p id="notice"><%= notice %></p>

[if (c.parent.oclIsUndefined())] 
	[for (a : Attribute | c.attributes)] 
  		[if((a.type.name = 'integer') or (a.type.name = 'string') or (a.type.name = 'date') or (a.type.name = 'boolean') or (a.type.name = 'float') or (a.type.name = 'datetime') or  (a.type.name = 'time'))]
  		<p>
  			<strong>[a.name/]:</strong>
  			<%= ['@'+c.name.toLowerCase()+'.'+a.name/] %>
		</p>
		[else]
		[/if]
	[/for] 
[/if]
[if (not c.parent.oclIsUndefined())] 
	[for (a : Attribute | c.parent.attributes)]
  		[if((a.type.name = 'integer') or (a.type.name = 'string') or (a.type.name = 'date') or (a.type.name = 'boolean') or (a.type.name = 'float') or (a.type.name = 'datetime') or  (a.type.name = 'time'))]
  		<p>
  			<strong>[a.name/]:</strong>
  			<%= ['@'+c.name.toLowerCase()+'.'+a.name/] %>
		</p>
		[else]
		[/if]
	[/for]
	[for (a : Attribute | c.attributes)]
		<p>
  			<strong>[a.name/]:</strong>
  			<%= ['@'+c.name.toLowerCase()+'.'+a.name/] %>
		</p>
	[/for]
[/if]

<%= link_to 'Edit', edit_[c.name.toLowerCase()/]_path(['@'+c.name.toLowerCase()/]) %> |
<%= link_to 'Back', [c.name.toLowerCase()+'s'/]_path %>
[/file]


[comment creacion de index.json.jbuilder/]
[file ('app/views/'+c.name.toLowerCase() +'s/index.json.jbuilder', false, 'UTF-8')]
json.array! ['@'+c.name.toLowerCase()+'s'/] do |[c.name.toLowerCase()/]|
	json.extract! [c.name.toLowerCase()/], :id[for (a : Attribute | c.attributes)][if((a.type.name = 'integer') or (a.type.name = 'string') or (a.type.name = 'date') or (a.type.name = 'boolean') or (a.type.name = 'float') or (a.type.name = 'datetime') or  (a.type.name = 'time'))][' , :'+a.name/][/if][if((a.type.name = 'belongs_to'))][' , :'+a.name.toLowerCase()+'_id'/][/if][/for]
	json.url [c.name.toLowerCase()/]_url([c.name.toLowerCase()/], format: :json)
end
[/file]
 
[comment creacion de show.json.jbuilder/]
[file ('app/views/'+c.name.toLowerCase() +'s/show.json.jbuilder', false, 'UTF-8')]
json.extract! @[c.name.toLowerCase()/], :id[for (a : Attribute | c.attributes)][if((a.type.name = 'integer') or (a.type.name = 'string') or (a.type.name = 'date') or (a.type.name = 'boolean') or (a.type.name = 'float') or (a.type.name = 'datetime') or  (a.type.name = 'time'))][' , :'+a.name/][/if][if((a.type.name = 'belongs_to'))][' , :'+a.name.toLowerCase()+'_id'/][/if][/for], :created_at, updated_at
[/file]
[/for]

[for (c : Class | model.elements->filter(Class))]
[comment creacion de migrations.rb/]
[file ('db/migrate/201601234567_create_'+c.name.toLowerCase()+'s'+'.rb', false, 'UTF-8')]
[if (c.parent.oclIsUndefined())] 
class Create[c.name+'s'/] < ActiveRecord::Migration
  def change
    create_table :[c.name.toLowerCase()+'s'/] do |t|
[/if]    
[/file]
[/for]


[for (c : Class | model.elements->filter(Class))]
[if (c.parent.oclIsUndefined())]
	 [for (a : Attribute | c.attributes)]
	 	[if((a.type.name = 'has_one'))]
[file ('db/migrate/201601234567_create_'+a.name.toLowerCase()+'s'+'.rb', true, 'UTF-8')]
	t.references :[c.name.toLowerCase()/], index: true
	add_foreign_key :[c.name.toLowerCase()/]s, :[a.name.toLowerCase()/]s
[/file]
		[/if]
	 [/for] 
[/if]
[/for]


[for (c : Class | model.elements->filter(Class))]
[comment creacion de migrations.rb/]
[file ('db/migrate/201601234567_create_'+c.name.toLowerCase()+'s'+'.rb', true, 'UTF-8')]
[if (c.parent.oclIsUndefined())] 
	[for (a : Attribute | c.attributes)]
		[if((a.type.name = 'belongs_to'))]
		t.references :[a.name.toLowerCase()/], index: true
		add_foreign_key :[a.name.toLowerCase()/]s, :[c.name.toLowerCase()/]s
		[/if] 
		[if((a.type.name = 'integer') or (a.type.name = 'string') or (a.type.name = 'date') or (a.type.name = 'boolean') or (a.type.name = 'float') or (a.type.name = 'datetime') or  (a.type.name = 'time'))]
		t.[a.type.name/] :[a.name/]
		[/if]
	[/for] 
	    t.timestamps null: false
	end
  end
end
[/if]
[/file]
[/for]


[comment creacion de config/routes.rb/]
[file ('config/routes.rb', false, 'UTF-8')]
Rails.application.routes.draw do
[for (cc : Class | model.elements->filter(Class))]
  resources :[cc.name.toLowerCase()+'s'/]
[/for]
  
end
[/file]

[comment creacion de gemfile /]
[file ('Gemfile', false, 'UTF-8')]
source 'https://rubygems.org'
git_source(:github) do |repo_name|
  repo_name = "#{repo_name}/#{repo_name}" unless repo_name.include?("/")
  "https://github.com/#{repo_name}.git"
end
gem 'rails', '~> 5.0.3'
gem 'sqlite3'
gem 'puma', '~> 3.0'
gem 'sass-rails', '~> 5.0'
gem 'uglifier', '>= 1.3.0'
gem 'coffee-rails', '~> 4.2'
# gem 'therubyracer', platforms: :ruby
# Use jquery as the JavaScript library
gem 'jquery-rails'
gem 'turbolinks', '~> 5'
gem 'jbuilder', '~> 2.5'
# gem 'redis', '~> 3.0'
# gem 'bcrypt', '~> 3.1.7'
gem "devise"
gem "haml-rails"
gem 'bootstrap-sass'
gem 'bootstrap-material-design'
gem 'annotate'
gem 'figaro'
gem 'chart-js-rails'
group :development, :test do
  gem 'byebug', platform: :mri
end
group :development do
  gem 'web-console', '>= 3.3.0'
  gem 'listen', '~> 3.0.5'
  gem 'spring'
  gem 'spring-watcher-listen', '~> 2.0.0'
  gem 'capistrano'
  gem 'capistrano3-puma'
  gem 'capistrano-rails', require: false
  gem 'capistrano-bundler', require: false
  gem 'capistrano-rvm'
end
gem 'tzinfo-data', platforms: ['[:mingw, :mswin, :x64_mingw, :jruby]'/]
[/file]

[comment creacion de application.js /]
[file ('app/assets/javascripts/application.js', false, 'UTF-8')]
//= require jquery
//= require jquery_ujs
//= require turbolinks
//= require bootstrap
//= require bootstrap-material-design
//= require Chart.min
//= require_tree .
[/file]
[comment creacion de app.scss /]
[file ('app/assets/stylesheets/app.scss', false, 'UTF-8')]
img{
	max-width:100% !important;
}
.tall-padding{
	padding: 10px 5px;
}
.right-space{
	margin-right:1em;
}
.close-parent{
	cursor:pointer;
}
.payment-btn{
	border-radius:3px;
	border:none;
	color:#fff;
	padding:1em 2em;
	outline:none;
}
a:hover{
	color: inherit !important;
}
.paypal-btn{
	background-color:#FE1935;
}
.card-btn{
	background-color:#1D785B;
}
[/file]
[comment creacion de application.css /]
[file ('app/assets/stylesheets/application.css', false, 'UTF-8')]
/*
 *= require common
 *= require bootstrap-material-design
 *= require app
 *= require_self
 */
[/file]

[comment creacion de common.css /]
[file ('app/assets/stylesheets/common.css', false, 'UTF-8')]
@import "bootstrap";

$green: #16a085;
$grey: #5A6576;
$other-grey: #E7ECEE;
$blue: #058CC5;
$red: #d2527f;
$light-blue: #3498DB;
$teal: #009688;
/*Texto*/
.bold{
	font-weight:bold;
}

/* Colores */
.white{
	background-color:white;
}
.white-text{
	color:white;
}

.green{
	background-color: $green;
}
.green-text{
	color: $green;
}
.blue{
	background-color: $blue;
}
.blue-text{
	color: $blue;
}
.light-blue{
	background-color: $light-blue;
}
.light-blue-text{
	color: $light-blue;
}
.red{
	background-color: $red;
}
.red-text{
	color: $red;
}
.grey{
	background-color: $grey;
}
.grey-text{
	color: $grey;
}
.other-grey{
	background-color: $other-grey;
}
.other-grey-text{
	color: $other-grey;
}
/* Paddings */
.large-padding{
	padding:5px 10px;
}
.big-padding{
	padding:2em;
}
.no-padding{
	padding:0;
}
/* Margins */
.no-margin{
	margin:0;
}
.big-top-space{
	margin-top:50px;
}
.top-space{
	margin-top:1em;
}
.bottom-space{
	margin-bottom:2em;
}
/* Alineamiento */
.no-float{
	float: none !important;
}
.in-top{
	vertical-align:top !important;
}
.inline-block{
	float: none !important;
	display:inline-block;
	vertical-align:middle;
	margin-right: -4px;
}
.absolute{
	position:absolute;
}
/* Tamaños */
.small{
	font-size:12px;
}
.normal{
	font-size: 1.2em;
}
.medium{
	font-size:1.5em;
}
.big{
	font-size:3em;
}
.bigger{
	font-size:4em;
}
.ultra-big{
	font-size:7em;
}
[/file]

[comment creacion de lan.scss.erb /]
[file ('app/assets/stylesheets/lan.scss.erb', false, 'UTF-8')]
@font-face{
	font-family:"Kostic";
	src: url(<%= asset_path("Kostic-Regular.ttf") %>) format('truetype');
}

@font-face{
	font-family:"Kostic";
	src: url(<%= asset_path("Kostic-Bold.ttf") %>) format('truetype');
	font-weight:bold;
}

@font-face{
	font-family:"Kostic";
	src: url(<%= asset_path("Kostic-Thin.ttf") %>) format('truetype');
	font-weight:lighter;
}

.kostic{
	font-family:"Kostic";
}
.circle{
	border-radius: 50%;
	display: inline-block;
	padding-top: 10px;
	height: 70px;
	width: 80px;
}
.landing-form{
	border:none;
	outline:none;
	border-bottom: solid 1px #E43D7A;
	font-size: 1.5em;
	color: #C8376C;
}

::-webkit-input-placeholder { /* WebKit browsers */
    color:#E43D7A;
    opacity:  0.7;
}
:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
   color:    #E43D7A;
   opacity:  0.7;
}
::-moz-placeholder { /* Mozilla Firefox 19+ */
   color:    #E43D7A;
   opacity:  0.7;
}
:-ms-input-placeholder { /* Internet Explorer 10+ */
   color:    #E43D7A;
   opacity:  0.7;
}
[/file]
[comment creacion de formbuilder/]
[file ('app/controllers/bootstrap_form_builder.rb', false, 'UTF-8')]
class BootstrapFormBuilder < ActionView::Helpers::FormBuilder
	delegate :content_tag, to: :@template
	
	['[:text_field,:text_area,:url_field,:email_field,:number_field,:date_field,:time_field]'/].each do |metodo|
		define_method metodo do |name,*args|
			options = args.extract_options!
			aditional_classes = "form-control floating-label"
			if options.has_key?(:class)
				options['[:class]'/] += aditional_classes
			else
				options['[:class]'/] = aditional_classes
			end
			options['[:placeholder]'/] = name.capitalize
			content_tag :div, class:"form-group" do
				super(name,options)
			end
		end
	end

	def errors
		if object.errors.any?
			content_tag :div, class:"red large-padding white-text" do
				content_tag(:h2, "Errores") +
				content_tag(:ul) do
					lis = ""
					object.errors.full_messages.each do |err|
						lis += content_tag :li, err
					end
					lis.html_safe
				end
			end
		end
	end

	def submit(*args)
		content_tag :div do
			super(*args,class:"btn btn-success")
		end
	end
end
[/file]

[file ('app/views/layouts/application.html.erb', false, 'UTF-8')]
<!DOCTYPE html>
<html>
<head>
  <title>Aplicacion</title>
  <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
  <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
  <%= csrf_meta_tags %>
</head>
<body>
<div class="blue white-text large-padding bold text-center" style="display:none;">
		<p class="no-padding no-margin inline-block"></p>
		<span class="pull-right close-parent">X</span>
	</div>


	<header>
  <nav class='green'>
    <ul class='no-list no-padding text-center'>
      <li class='col-md-12 inline-block tall-padding white-text'>
        <a class="right-space blue-text" rel="nofollow" data-method="delete" href="/users/sign_out">Cerrar sesión</a>
      </li>
    </ul>
  </nav>
</header>

	<div class="col-md-11 no-float center-block">
		
		<%= yield %>
	</div>
</body>
</html>
[/file]
[/template]


[template public generarAtributo(a : Attribute)]
[if((a.type.name = 'has_manyT') or (a.type.name = 'has_oneT'))]
  <%= f.label :[a.name.substitute((a.name.substring(a.name.index(':'))) ,'')/] %><br>
[elseif((a.type.name = 'belongs_to') or (a.type.name = 'boolean'))]
  <%= f.label :[a.name/] %><br>
[/if] 
  [generarAtributoComplejo(a)/]
[/template]


[template public generarAtributoComplejo(a : Attribute)]
[if(a.type.name = 'belongs_to')]
<%= f.select(:[a.name.toLowerCase()/]_id, options_for_select(['@'+a.name.toLowerCase()/])) %>
[elseif(a.type.name = 'has_one' )]
<%= f.select(:[a.name.toLowerCase()/]_id, options_for_select(['@'+a.name.toLowerCase()/])) %>
[elseif(a.type.name = 'has_many' )]
<%= f.collection_check_boxes :[a.name.toLowerCase()+'_ids'/], [a.name/].all, :id, :id do |b| %>
      <div class="collection-check-box">
        <%= b.check_box %>
        <%= b.label %>
      </div>
    <% end %>
[elseif(a.type.name = 'has_oneT' )]
<%= f.select(:[a.name.toLowerCase()/]_id, options_for_select(['@'+a.name.toLowerCase()/])) %>
[elseif(a.type.name = 'has_manyT' )]
<%= f.collection_check_boxes :[a.name.substitute((a.name.substring(a.name.index(':'))) ,'').toLowerCase()+'_ids'/], [a.name.substitute((a.name.substring(a.name.index(':'))) ,'')/].all, :id, :id do |b| %>
      <div class="collection-check-box">
        <%= b.check_box %>
        <%= b.label %>
      </div>
    <% end %>
[else]
[generarAtributoSimple(a)/]
[/if]  
[/template]



[template public generarAtributoSimple(a : Attribute)]
  <%= f.[if ((a.type.name = 'integer')or (a.type.name = 'float'))]['number_field'/][/if][if (a.type.name = 'string')]['text_field'/][/if][if (a.type.name = 'date')]['date_field'/][/if][if (a.type.name = 'boolean')]['check_box'/][/if][if (a.type.name = 'datetime')]['datetime_local_field'/][/if][if (a.type.name = 'time')]['time_field'/][/if][if (a.type.name = 'float')] :[a.name+', class: :text_field, step: :any'/][else] :[a.name/][/if] %>
[/template]